{"version":3,"file":"file-uploader.service.js","sourceRoot":"","sources":["file-uploader.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyC,eAAe,CAAC,CAAA;AAEzD;IAYE,sBAAY,EAAU,EAAE,YAAoB,EAAE,IAAY;QACxD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;SACX,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,iCAAU,GAAV,UAAW,QAAgB;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,iCAAU,GAAV,UAAW,MAAc,EAAE,UAAkB,EAAE,QAAgB;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACH,mBAAC;AAAD,CAAC,AA9CD,IA8CC;AAGD;IAAA;QAGE,SAAI,GAAY,KAAK,CAAC;QACtB,oBAAe,GAAY,KAAK,CAAC;QACjC,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAW,CAAC,CAAC;QACvB,sBAAiB,GAAa,EAAE,CAAC;QACjC,YAAO,GAAY,KAAK,CAAC;QACzB,SAAI,GAAW,EAAE,CAAC;QAClB,aAAQ,GAAY,IAAI,CAAC;QACzB,eAAU,GAAY,IAAI,CAAC;QAC3B,cAAS,GAAY,IAAI,CAAC;QAC1B,WAAM,GAAW,MAAM,CAAC;QACxB,UAAK,GAAY,KAAK,CAAC;QACvB,kBAAa,GAAW,EAAE,CAAC;QAC3B,kBAAa,GAAY,IAAI,CAAC;QAC9B,oBAAe,GAAW,QAAQ,CAAC;QACnC,cAAS,GAAW,SAAS,CAAC;QAC9B,cAAS,GAAW,MAAM,CAAC;QAE3B,WAAM,GAAU,EAAE,CAAC;QACnB,aAAQ,GAAsB,IAAI,mBAAY,CAAC,IAAI,CAAC,CAAC;IA8IvD,CAAC;IA5IC,wCAAU,GAAV,UAAW,OAAY;QAErB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,IAAI,GAAG,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACxG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5E,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACpF,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,IAAI,IAAI,GAAG,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChH,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACxE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5E,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACpF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACpE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAChG,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,IAAI,GAAG,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAChG,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,IAAI,GAAG,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACxG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBAKC;QAJC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,QAAQ,CAAC,OAAO,CAAC,UAAC,CAAC;YACjB,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;;IAED,wCAAU,GAAV,UAAW,IAAS;QAApB,iBA8DC;QA7DC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7C,IAAI,aAAa,GAAG,IAAI,YAAY,CAChC,IAAI,CAAC,mBAAmB,EAAE,EAC1B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACZ,CAAC;QAEF,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE3C,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,UAAC,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACvB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;gBACnD,aAAa,CAAC,UAAU,CAAC;oBACvB,KAAK,EAAE,CAAC,CAAC,KAAK;oBACd,MAAM,EAAE,CAAC,CAAC,MAAM;oBAChB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;gBAEH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAA;QAED,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,UAAC,CAAC;YACrB,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC,CAAA;QAED,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,UAAC,CAAC;YACrB,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC,CAAA;QAED,GAAG,CAAC,kBAAkB,GAAG;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3C,aAAa,CAAC,UAAU,CACpB,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,UAAU,EACd,GAAG,CAAC,QAAQ,CACf,CAAC;gBACF,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBACrC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAA;QAED,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;gBAC1C,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAK,IAAI,CAAC,eAAe,SAAI,IAAI,CAAC,SAAW,CAAC,CAAC;QACrF,CAAC;QAED,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,6CAAe,GAAf,UAAgB,KAAiB;QAC/B,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,CAAC;YAAlB,IAAI,IAAI,cAAA;YACX,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;SACF;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,iDAAmB,GAAnB,UAAoB,CAAS;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,0CAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAS;QACf,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;IAC3C,CAAC;IAED,oCAAM,GAAN,UAAO,IAAS;QACd,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,iCAAG,GAAH,UAAI,GAAQ;QACV,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACT,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,iDAAmB,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IApKH;QAAC,iBAAU,EAAE;;2BAAA;IAqKb,0BAAC;AAAD,CAAC,AApKD,IAoKC;AApKY,2BAAmB,sBAoK/B,CAAA","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\nclass UploadedFile {\n  id: string;\n  status: number;\n  statusText: string;\n  progress: Object;\n  originalName: string;\n  size: number;\n  response: string;\n  done: boolean;\n  error: boolean;\n  abort: boolean;\n\n  constructor(id: string, originalName: string, size: number) {\n    this.id = id;\n    this.originalName = originalName;\n    this.size = size;\n    this.progress = {\n      loaded: 0,\n      total: 0,\n      percent: 0\n    };\n    this.done = false;\n    this.error = false;\n    this.abort = false;\n  }\n\n  setProgres(progress: Object): void {\n    this.progress = progress;\n  }\n\n  setError(): void {\n    this.error = true;\n    this.done = true;\n  }\n\n  setAbort(): void {\n    this.abort = true;\n    this.done = true;\n  }\n\n  onFinished(status: number, statusText: string, response: string): void {\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.done = true;\n  }\n}\n\n@Injectable()\nexport class FileUploaderService {\n\n  url: string;\n  cors: boolean = false;\n  withCredentials: boolean = false;\n  multiple: boolean = false;\n  maxUploads: number = 3;\n  allowedExtensions: string[] = [];\n  maxSize: boolean = false;\n  data: Object = {};\n  noParams: boolean = true;\n  autoUpload: boolean = true;\n  multipart: boolean = true;\n  method: string = 'POST';\n  debug: boolean = false;\n  customHeaders: Object = {};\n  encodeHeaders: boolean = true;\n  authTokenPrefix: string = \"Bearer\";\n  authToken: string = undefined;\n  fieldName: string = \"file\";\n\n  _queue: any[] = [];\n  _emitter: EventEmitter<any> = new EventEmitter(true);\n\n  setOptions(options: any): void {\n\n    this.url = options.url != null ? options.url : this.url;\n    this.cors = options.cors != null ? options.cors : this.cors;\n    this.withCredentials = options.withCredentials != null ? options.withCredentials : this.withCredentials;\n    this.multiple = options.multiple != null ? options.multiple : this.multiple;\n    this.maxUploads = options.maxUploads != null ? options.maxUploads : this.maxUploads;\n    this.allowedExtensions = options.allowedExtensions != null ? options.allowedExtensions : this.allowedExtensions;\n    this.maxSize = options.maxSize != null ? options.maxSize : this.maxSize;\n    this.data = options.data != null ? options.data : this.data;\n    this.noParams = options.noParams != null ? options.noParams : this.noParams;\n    this.autoUpload = options.autoUpload != null ? options.autoUpload : this.autoUpload;\n    this.multipart = options.multipart != null ? options.multipart : this.multipart;\n    this.method = options.method != null ? options.method : this.method;\n    this.debug = options.debug != null ? options.debug : this.debug;\n    this.customHeaders = options.customHeaders != null ? options.customHeaders : this.customHeaders;\n    this.encodeHeaders = options.encodeHeaders != null ? options.encodeHeaders : this.encodeHeaders;\n    this.authTokenPrefix = options.authTokenPrefix != null ? options.authTokenPrefix : this.authTokenPrefix;\n    this.authToken = options.authToken != null ? options.authToken : this.authToken;\n    this.fieldName = options.fieldName != null ? options.fieldName : this.fieldName;\n\n    if (!this.multiple) {\n      this.maxUploads = 1;\n    }\n  }\n\n  uploadFilesInQueue(): void {\n    let newFiles = this._queue.filter((f) => { return !f.uploading; });\n    newFiles.forEach((f) => {\n      this.uploadFile(f);\n    });\n  };\n\n  uploadFile(file: any): void {\n    let xhr = new XMLHttpRequest();\n    let form = new FormData();\n    form.append(this.fieldName, file, file.name);\n\n    let uploadingFile = new UploadedFile(\n        this.generateRandomIndex(),\n        file.name,\n        file.size\n    );\n\n    let queueIndex = this._queue.indexOf(file);\n\n    xhr.upload.onprogress = (e) => {\n      if (e.lengthComputable) {\n        let percent = Math.round(e.loaded / e.total * 100);\n        uploadingFile.setProgres({\n          total: e.total,\n          loaded: e.loaded,\n          percent: percent\n        });\n\n        this._emitter.emit(uploadingFile);\n      }\n    }\n\n    xhr.upload.onabort = (e) => {\n      uploadingFile.setAbort();\n      this._emitter.emit(uploadingFile);\n    }\n\n    xhr.upload.onerror = (e) => {\n      uploadingFile.setError();\n      this._emitter.emit(uploadingFile);\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        uploadingFile.onFinished(\n            xhr.status,\n            xhr.statusText,\n            xhr.response\n        );\n        this.removeFileFromQueue(queueIndex);\n        this._emitter.emit(uploadingFile);\n      }\n    }\n\n    xhr.open(this.method, this.url, true);\n    xhr.withCredentials = this.withCredentials;\n\n    if (this.customHeaders) {\n      Object.keys(this.customHeaders).forEach((key) => {\n        xhr.setRequestHeader(key, this.customHeaders[key]);\n      });\n    }\n\n    if (this.authToken) {\n      xhr.setRequestHeader(\"Authorization\", `${this.authTokenPrefix} ${this.authToken}`);\n    }\n\n    xhr.send(form);\n  }\n\n  addFilesToQueue(files: FileList[]): void {\n    for (let file of files) {\n      if (this.isFile(file) && !this.inQueue(file)) {\n        this._queue.push(file);\n      }\n    }\n\n    if (this.autoUpload) {\n      this.uploadFilesInQueue();\n    }\n  }\n\n  removeFileFromQueue(i: number): void {\n    this._queue.splice(i, 1);\n  }\n\n  clearQueue(): void {\n    this._queue = [];\n  }\n\n  getQueueSize(): number {\n    return this._queue.length;\n  }\n\n  inQueue(file: any): boolean {\n    let fileInQueue = this._queue.filter((f) => { return f === file; });\n    return fileInQueue.length ? true : false;\n  }\n\n  isFile(file: any): boolean {\n    return file !== null && (file instanceof Blob || (file.name && file.size));\n  }\n\n  log(msg: any): void {\n    if (!this.debug) {\n      return;\n    }\n    console.log('[Ng2Uploader]:', msg);\n  }\n\n  generateRandomIndex(): string {\n    return Math.random().toString(36).substring(7);\n  }\n}\n"]}